# GitLab CI/CD Pipeline for BizFlow
stages:
  - test
  - build
  - security
  - deploy-staging
  - deploy-production

variables:
  NODE_VERSION: "20"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

# Cache dependencies between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/

# Test Stage
test:
  stage: test
  image: node:${NODE_VERSION}-alpine
  before_script:
    - npm ci
  script:
    - npm run check
    - echo "Tests completed successfully"
  artifacts:
    reports:
      junit: test-results.xml
    expire_in: 1 week
  only:
    - merge_requests
    - main
    - develop

# Build Stage
build:
  stage: build
  image: node:${NODE_VERSION}-alpine
  before_script:
    - npm ci
  script:
    - npm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - main
    - develop

# Security Scan
security-scan:
  stage: security
  image: aquasec/trivy:latest
  script:
    - trivy fs --format sarif --output trivy-results.sarif .
  artifacts:
    reports:
      sast: trivy-results.sarif
    expire_in: 1 week
  only:
    - main
    - develop

# Docker Build
docker-build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main

# Deploy to Staging
deploy-staging:
  stage: deploy-staging
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Deploying to staging environment..."
    - curl -X POST $STAGING_WEBHOOK_URL -H "Content-Type: application/json" -d "{\"ref\":\"$CI_COMMIT_SHA\"}"
  environment:
    name: staging
    url: https://staging.bizflow.com
  only:
    - develop
  when: manual

# Deploy to Production
deploy-production:
  stage: deploy-production
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Deploying to production environment..."
    - curl -X POST $PRODUCTION_WEBHOOK_URL -H "Content-Type: application/json" -d "{\"ref\":\"$CI_COMMIT_SHA\"}"
  environment:
    name: production
    url: https://bizflow.com
  only:
    - main
  when: manual

# Health Check
health-check:
  stage: deploy-production
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Performing health check..."
    - sleep 30
    - curl -f $PRODUCTION_URL/api/health || exit 1
    - echo "Health check passed!"
  dependencies:
    - deploy-production
  only:
    - main
  when: on_success
